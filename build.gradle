plugins {
	id 'fabric-loom' version '1.8-SNAPSHOT'
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	// Terraformers Maven, for Mod Menu
	maven {
		name = "Terraformers"
		url = "https://maven.terraformersmc.com/"
		content {
			includeGroup "io.github.prospector"
		}
	}
	//Modrinth Maven, for mods on Modrinth without mavens.
	exclusiveContent {
		forRepository {
			maven {
				name = "Modrinth"
				url = "https://api.modrinth.com/maven"
			}
		}
		filter {
			includeGroup "maven.modrinth"
		}
	}
	//badasintended Maven, for WTHIT and Bad Packets
	maven {
		name = "badasintended"
		url = "https://maven2.bai.lol"
		content {
			includeGroup "lol.bai"
			includeGroup "mcp.mobius.waila"
		}
	}
	//Cassian's Maven, for Fabric Item API
	maven {
		name = "cassiancc maven"
		url = "https://maven.cassian.cc"
	}
	//shedaniel maven, for Cloth Config
	maven {
		name = "shedaniel"
		url = "https://maven.shedaniel.me/"
	}


}

dependencies {
	// To change the versions see the gradle.properties file. Unused libraries should be commented out.
	// Minecraft
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	// Yarn mappings
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	// Fabric Loader
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	// Fabric API
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	// Fabric API - Item API
	modImplementation "net.fabricmc.fabric:fabric-item-api-v1:${project.fabric_item_api_version}"
	// Mod Menu
	modImplementation "io.github.prospector:modmenu:${project.modmenu_version}"
	// HWYLA
	modImplementation "maven.modrinth:hwyla:${project.hwyla_version}-fabric"
	// Cloth Config and dependencies
	modApi("me.shedaniel.cloth:config-2:${project.cloth_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	modApi("me.shedaniel.cloth:cloth-events:${project.cloth_events_version}")


}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 8
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}